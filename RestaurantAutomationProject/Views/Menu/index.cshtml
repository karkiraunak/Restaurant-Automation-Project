@model IEnumerable<RestaurantAutomationProject.Models.MenuViewModel>

@{
	ViewBag.Title = "Menu";
}
<div id="menuheading">
	<p id="heading"></p>
	@Html.Hidden("RedirectTo", Url.Action("index", "OrderDetail")) <!--redirect to order detail once confirm order is clicked-->
	@Html.Hidden("RedirectTo1", Url.Action("index", "OrderStatus"))
	@if (ViewBag.ShowConfirm)
	{
		<button id="quickorder" style="display : block;" class="btn btn-primary btn-sm">Quick Order</button> <!---->
		<button id="verifyorder" style="display : block;" class="btn btn-primary btn-sm">Verify Order</button>
	}
	else
	{
		<button id="quickorder" style="display : none;" type="button" class="btn btn-primary btn-sm">Quick Order</button>
		<button id="verifyorder" style="display : none;" type="button" class="btn btn-primary btn-sm">Verify Order</button>
	}



</div>


<div class="container">
	<div class="row">
		@foreach (var cat in ViewBag.CategoryList)
		{
		foreach (var item in Model)
		{


			<div class="col-md-3">
				<div class="card">
					<img class="card-img-top" src="@Html.DisplayFor(modelItem => item.ItemPhotoUrl)" alt="Card image cap">
					<div class="card-body">
						<h5 class="card-title">@Html.DisplayFor(modelItem => item.ItemName)</h5>
						<h6 class="card-subtitle">$ @Html.DisplayFor(modelItem => item.ItemPrice)</h6>
						<p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
						Qty <select id = "@("itemqty" + item.ItemId)" class="selectpicker">  
							<option>1</option>
							<option>2</option>
							<option>3</option>
							<option>4</option>
							<option>5</option>
							<option>6</option>
							<option>7</option>
							<option>8</option>
							<option>9</option>
							<option>10</option>
							<option>11</option>
							<option>12</option>
						</select>
						<br /><br />
						<button id="@("item" + item.ItemId)" type="button" class="addToOrder btn btn-primary btn-sm">Add to Order</button>
					</div>
				</div>
			</div>
		}
		}
	</div>
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>

	$(document).ready(function () {

		$(".addToOrder").click(function () {

			var itemId = $(this).attr('id').charAt(4);      // ItemId of the item                                    
			var itemQty = $("#itemqty" + itemId).val();     // quantity of the item chosen by user
			var OrderDetailJSON = { ItemId: itemId, Quantity: itemQty }
		
				$.ajax({
					type: "POST",
					contentType: "application/json; charset-utf-8",
					data: "{OrderDetailJSON:" + JSON.stringify(OrderDetailJSON) + "}",   // ajax call to populate order table and orderdetail table on click of add to order button
					url: "/Menu/PostOrder",
					success: function () {
						$("#quickorder").css("display", "block");
						$("#verifyorder").css("display", "block");
						
					}
				})
			
		});   //end of addToOrder

		// Type writer effect in menu page 

		var chars = 'Hunger Tip : Just click Add To Order and click Quick Order'.split('');
		var container = document.getElementById("heading");

		var i = 0;
		setInterval(function () {
			if (i < chars.length) {
				container.innerHTML += chars[i++];
			} else {
				i = 0;
				container.innerHTML = "";
			}
		}, 60);
		
		$("#quickorder").click(function () {

			
		//	var ConfirmOrderJSON = { confirm: "confirm" };

			$.ajax({
				type: "POST",
				contentType: "application/json; charset-utf-8",
				url: "/Order/PostOrder",
				success: function () {

					var url = $("#RedirectTo1").val();
					location.href = url;
					

				}
			})

		}); 

		$("#verifyorder").click(function () {
			

			var url = $("#RedirectTo").val();
			location.href = url;
		});
	});
	
</script>
